% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lasso_PI_scores_f.R
\name{Lasso_PI_scores_f}
\alias{Lasso_PI_scores_f}
\title{This function will create PI (Prognostic Index) score based on selected
LASSO genes for training and test data.  Here, firstly, LASSO will select genes
with beta coefficient values based on COX lasso regression using 5-fold cross
validation. Subsequently, PI score will be calculated by multiplying expression
of genes with their beta coeff values.
#' @param train_data :args1 - training data (Patients data with clinical and
gene expression, where samples are in rows and features/genes are in columns)}
\usage{
Lasso_PI_scores_f(
  train_data,
  test_data,
  nfolds,
  col_num,
  surv_time,
  surv_event)
}
\arguments{
\item{test_data}{:args2 - testing data (Patients data with clinical and gene
expression, where samples are in rows and features/genes are in columns)}

\item{train_data}{:args1 - training data (Patients data with clinical and gene
expression, where samples are in rows and features/genes are in columns)}

\item{nfolds}{: args3 - Number of folds for cross in cvglmnet model to select
top features}

\item{col_num}{:args4 - column number in data at where clinical info ends}

\item{surv_time}{:arg5 - name of column which contain survival time (in days)
information}

\item{surv_event}{:arg6- name of column which contain survival eventinformation}


}
\description{
This function will create PI (Prognostic Index) score based on selected LASSO
genes for training and test data.  Here, firstly, LASSO will select genes with
beta coefficient values based on COX lasso regression using 5-fold cross
validation. Subsequently, PI score will be calculated by multiplying expression
of genes with their beta coeff values.
#' @param train_data :args1 - training data (Patients data with clinical and
gene expression, where samples are in rows and features/genes are in columns)
}
\value{
  Returns a data frame.
}
\examples{
data(Train_Norm_data, package = "CPSM")
data(Test_Norm_data, package = "CPSM")
Lasso_PI_scores_f(train_data= Train_Norm_data,
test_data= Test_Norm_data,
nfolds=5,
col_num=21,
surv_time="OS_month",
surv_event="OS" )
}





